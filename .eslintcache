[{"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\index.js":"1","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\App.js":"2","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\reportWebVitals.js":"3","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\DirectoryComponents.js":"4","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js":"5","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js":"6","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js":"7","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js":"8","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HomeComponent.js":"9","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js":"10","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\AboutComponent.js":"11","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js":"12","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js":"13","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js":"14","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js":"15","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\configureStore.js":"16","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\campsites.js":"17","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\comments.js":"18","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\partners.js":"19","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\promotions.js":"20","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionTypes.js":"21","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionCreators.js":"22","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\forms.js":"23","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\baseUrl.js":"24","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\LoadingComponents.js":"25"},{"size":695,"mtime":1612367122919,"results":"26","hashOfConfig":"27"},{"size":584,"mtime":1613160879046,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1611537267742,"results":"29","hashOfConfig":"27"},{"size":2133,"mtime":1613886735555,"results":"30","hashOfConfig":"27"},{"size":9612,"mtime":1613939744261,"results":"31","hashOfConfig":"27"},{"size":4597,"mtime":1613935580937,"results":"32","hashOfConfig":"27"},{"size":5238,"mtime":1613247430955,"results":"33","hashOfConfig":"27"},{"size":1949,"mtime":1612565526159,"results":"34","hashOfConfig":"27"},{"size":1946,"mtime":1613886058033,"results":"35","hashOfConfig":"27"},{"size":11369,"mtime":1614114083405,"results":"36","hashOfConfig":"27"},{"size":4193,"mtime":1613886960279,"results":"37","hashOfConfig":"27"},{"size":1242,"mtime":1612830596579,"results":"38","hashOfConfig":"27"},{"size":4243,"mtime":1612830594389,"results":"39","hashOfConfig":"27"},{"size":1054,"mtime":1612830591783,"results":"40","hashOfConfig":"27"},{"size":303,"mtime":1613885105796,"results":"41","hashOfConfig":"27"},{"size":814,"mtime":1613616020840,"results":"42","hashOfConfig":"27"},{"size":582,"mtime":1613600325545,"results":"43","hashOfConfig":"27"},{"size":587,"mtime":1613701348528,"results":"44","hashOfConfig":"27"},{"size":657,"mtime":1613884697874,"results":"45","hashOfConfig":"27"},{"size":714,"mtime":1613696420969,"results":"46","hashOfConfig":"27"},{"size":608,"mtime":1613884566462,"results":"47","hashOfConfig":"27"},{"size":6788,"mtime":1614117292913,"results":"48","hashOfConfig":"27"},{"size":174,"mtime":1613615811173,"results":"49","hashOfConfig":"27"},{"size":48,"mtime":1613695292417,"results":"50","hashOfConfig":"27"},{"size":243,"mtime":1613885294854,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"5xle38",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\index.js",[],["106","107"],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\App.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\reportWebVitals.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\DirectoryComponents.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\CampsiteInfoComponent.js",["108","109","110"],"import { Component } from \"react\"\r\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponents';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\n\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n       \r\n        this.state = {\r\n          rating: '',\r\n          author: '',\r\n          text:'',\r\n          isModalOpen: false,\r\n          touched: {\r\n              rating: false,\r\n              author: false,\r\n              text: false\r\n          }\r\n        \r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n       \r\n    }\r\n    \r\n     toggleModal() {\r\n         this.setState({\r\n             isModalOpen: !this.state.isModalOpen\r\n         });\r\n     }\r\n    \r\n     handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\r\n    }\r\n\r\n    render(){\r\n            return(\r\n                <div>\r\n                        <Button outline onClick={this.toggleModal}>\r\n                            <i className=\"fa fa-pencil fa-lg \" /> Submit Comment\r\n                        </Button>\r\n                        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                            <ModalBody>\r\n                                   \r\n                                    <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                                    <div className=\"form-group\">\r\n                                        <Label htmlFor=\"rating\" >Rating</Label>\r\n                                        \r\n                                        <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                                <option>1</option>\r\n                                                <option>2</option>\r\n                                                <option>3</option>\r\n                                                <option>4</option>\r\n                                                <option>5</option>\r\n                                               \r\n                                       </Control.select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <Label htmlFor=\"author\" >Author</Label>\r\n                                       \r\n                                            <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                                placeholder=\"Author\"\r\n                                                className=\"form-control\"\r\n                                                validators={{\r\n                                                    required, \r\n                                                    minLength: minLength(2),\r\n                                                    maxLength: maxLength(15)\r\n                                                }}\r\n                                               \r\n                                            />\r\n                                             <Errors\r\n                                                className=\"text-danger\"\r\n                                                model=\".author\"\r\n                                                show=\"touched\"\r\n                                                component=\"div\"\r\n                                                messages={{\r\n                                                    required: 'Required',\r\n                                                    minLength: 'Must be at least 2 characters',\r\n                                                    maxLength: 'Must be 15 characters or less'\r\n                                                }}\r\n                                            />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <Label htmlFor=\"comments\" >Your comments</Label>\r\n                                       \r\n                                            <Control.textarea model=\".comments\" id=\"comments\" name=\"comments\"\r\n                                               className=\"form-control\"\r\n                                            />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                       \r\n                                            <Button type=\"submit\" color=\"primary\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        \r\n                                    </div>\r\n                                </LocalForm>                    \r\n                            </ModalBody>\r\n\r\n                        </Modal>\r\n                 </div>\r\n            )\r\n    }\r\n};\r\n\r\n\r\n    \r\n  \r\n   function RenderComments({comments, postComment, campsiteId}){\r\n       \r\n        if(comments)\r\n        {\r\n               return( \r\n               \r\n                <div className=\"col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <Stagger in>\r\n                    {\r\n                        comments.map(comment => {\r\n                            return (\r\n                                <Fade in key={comment.id}>\r\n                                    <div>\r\n                                        <p>\r\n                                            {comment.text}<br />\r\n                                            -- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\r\n                                        </p>\r\n                                    </div>\r\n                                </Fade>\r\n                            );\r\n                        })\r\n                    }\r\n                </Stagger>\r\n                     <CommentForm campsiteId={campsiteId} postComment={postComment} />\r\n                </div>\r\n               \r\n               );\r\n                \r\n\r\n               \r\n        }\r\n        return(<div />)   \r\n    }\r\n    function RenderCampsite({campsite}) {\r\n\r\n            return(\r\n                    <div className=\"col-md-5 m-1\">\r\n                       <FadeTransform\r\n                            in\r\n                            transformProps={{\r\n                                exitTransform: 'scale(0.5) translateY(-50%)'\r\n                            }}>\r\n                            <Card>\r\n                                <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\r\n                                <CardBody>\r\n                                    <CardText>{campsite.description}</CardText>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </FadeTransform>\r\n                    </div>\r\n                \r\n            );\r\n           \r\n\r\n    }\r\n\r\n    function CampsiteInfo(props){\r\n        if (props.isLoading) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        if (props.errMess) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h4>{props.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n            if(props.campsite!=null)\r\n              {\r\n                     return(\r\n                        <div className=\"container\">\r\n                                  <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <Breadcrumb>\r\n                                        <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\r\n                                        <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\r\n                                    </Breadcrumb>\r\n                                    <h2>{props.campsite.name}</h2>\r\n                                    <hr />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                            <RenderCampsite campsite={props.campsite} />\r\n                            <RenderComments \r\n                                comments={props.comments}\r\n                                postComment={props.postComment}\r\n                                campsiteId={props.campsite.id}\r\n                            />\r\n                            </div>\r\n                        </div>\r\n                     );\r\n              }\r\n              \r\n                  return <div />\r\n     }\r\n\r\n\r\n\r\n\r\n\r\nexport default CampsiteInfo","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\MainComponent.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HeaderComponent.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\FooterComponent.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\HomeComponent.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\ContactComponent.js",["111","112","113","114","115","116","117","118"],"import React, { Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || (val.length <= len);\r\nconst minLength = len => val => val && (val.length >= len);\r\nconst isNumber = val => !isNaN(+val);\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            phoneNum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'By Phone',\r\n            feedback: '',\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                phoneNum: false,\r\n                email: false\r\n            }\r\n        };\r\n\r\n  \r\n    }\r\n\r\n \r\n   handleSubmit(values) {\r\n   // console.log(\"Current state is: \" + JSON.stringify(values));\r\n   //  alert(\"Current values inside handleSubmit: \" + JSON.stringify(values));\r\n    this.props.postFeedback(values);\r\n    this.props.resetFeedbackForm();\r\n   \r\n}\r\n\r\n    \r\n    render() {\r\n        \r\n          return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                        <Breadcrumb>\r\n                                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                                <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <h2>Contact Us</h2>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row row-content align-items-center\">\r\n                        <div className=\"col-sm-4\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                                1 Nucamp Way<br />\r\n                                Seattle, WA 98001<br />\r\n                                U.S.A.\r\n                            </address>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\r\n                            <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Send us your Feedback</h2>\r\n                        <hr />\r\n\r\n                    </div>\r\n                    <div className=\"col-md-10\">\r\n                    <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}> \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, \r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(2),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastName\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\r\n                                        placeholder=\"Phone number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(10),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".phoneNum\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be at least 10 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        component=\"div\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 4, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox\r\n                                                model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>By Phone</option>\r\n                                        <option>By Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>     \r\n\r\n\r\n                </div>\r\n            );\r\n\r\n        }\r\n    }\r\nexport default Contact;","C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\AboutComponent.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\campsites.js",[],["119","120"],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\comments.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\partners.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\promotions.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\configureStore.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\campsites.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\comments.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\partners.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\promotions.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionTypes.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\ActionCreators.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\redux\\forms.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\shared\\baseUrl.js",[],"C:\\Users\\panar\\Desktop\\NucampFolder\\3-React\\nucampsite\\src\\components\\LoadingComponents.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":59,"column":41,"nodeType":"127","endLine":60,"endColumn":66},{"ruleId":"125","severity":1,"message":"128","line":72,"column":45,"nodeType":"127","endLine":81,"endColumn":47},{"ruleId":"125","severity":1,"message":"129","line":97,"column":45,"nodeType":"127","endLine":99,"endColumn":47},{"ruleId":"130","severity":1,"message":"131","line":5,"column":33,"nodeType":"132","messageId":"133","endLine":5,"endColumn":40},{"ruleId":"125","severity":1,"message":"128","line":88,"column":33,"nodeType":"127","endLine":96,"endColumn":39},{"ruleId":"125","severity":1,"message":"128","line":113,"column":37,"nodeType":"127","endLine":121,"endColumn":39},{"ruleId":"125","severity":1,"message":"128","line":138,"column":37,"nodeType":"127","endLine":147,"endColumn":39},{"ruleId":"125","severity":1,"message":"128","line":165,"column":37,"nodeType":"127","endLine":172,"endColumn":39},{"ruleId":"125","severity":1,"message":"134","line":189,"column":45,"nodeType":"127","endLine":193,"endColumn":47},{"ruleId":"125","severity":1,"message":"126","line":199,"column":37,"nodeType":"127","endLine":200,"endColumn":66},{"ruleId":"125","severity":1,"message":"129","line":209,"column":37,"nodeType":"127","endLine":212,"endColumn":39},{"ruleId":"121","replacedBy":"135"},{"ruleId":"123","replacedBy":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["137"],["138"],"no-global-assign","no-unsafe-negation"]